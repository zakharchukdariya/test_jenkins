#!groovy
//  groovy Jenkinsfile
properties([disableConcurrentBuilds()])

pipeline  {
    agent { 
        label 'master'
        }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("Print hello"){
            steps {
                sh '''
                    echo "Hello world!";
                    cat /etc/os-release
                    df -h
                '''
                
            }
        }
        stage("Create docker image") {
            steps {
                echo 'Creating docker image ...'
                dir('.'){
                    sh "docker build -t macnaer/zakharchukdariya/testsite . "
                }
           }
        }
  //      stage("docker login") {
 //           steps {
 //               echo " ============== docker login =================="
 //               withCredentials([usernamePassword(credentialsId: 'DockerHub-Credentials', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
//                    sh '''
 //                   docker login -u $USERNAME -p $PASSWORD
//                   '''
//                }
 //           }
//        }
//        stage("docker push") {
//            steps {
 //               echo " ============== pushing image =================="
 //               sh '''
 //               docker push macnaer/chatterboxserver:latest
 //               '''
  //          }
 //       }
 //       stage("docker stop") {
 //           steps {
 //               echo " ============== stoping all images =================="
 //               sh '''
 //               docker stop chatterboxserver
  //              '''
  //          }
//        } 
//        stage("docker remove") {
//            steps {
 //               echo " ============== removing all docker containers =================="
  //              sh '''
   //             docker rm chatterboxserver
  //              '''
 //           }
 //       }
 //       stage("docker run") {
 //           steps {
 //               echo " ============== starting chatterbox server =================="
 //               sh '''
 //               docker run -d --restart=always --name chatterboxserver -p 3200:3200 macnaer/chatterboxserver
 //              '''
 //           }
  //      }
        // stage("Deploy to stage server") {
        //     steps {
        //         echo " ============== Running playbook =================="
        //         sh '''
        //         ansible-playbook toolbox/ansible/playbooks/demloyToStageServer.yml
        //         '''
        //     }
        //}

   }
}

<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">Navbar</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarColor02" aria-controls="navbarColor02" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarColor02">
      <ul class="navbar-nav me-auto">
        <li class="nav-item">
          <a class="nav-link active" href="#">Home
            <span class="visually-hidden">(current)</span>
          </a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Features</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">Pricing</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="#">About</a>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">Dropdown</a>
          <div class="dropdown-menu">
            <a class="dropdown-item" href="#">Action</a>
            <a class="dropdown-item" href="#">Another action</a>
            <a class="dropdown-item" href="#">Something else here</a>
            <div class="dropdown-divider"></div>
            <a class="dropdown-item" href="#">Separated link</a>
          </div>
        </li>
      </ul>
      <form class="d-flex">
        <input class="form-control me-sm-2" type="text" placeholder="Search">
        <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
      </form>
    </div>
  </div>
</nav>
